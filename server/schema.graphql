"""
subscriptionにおいてデータの作成、更新及び削除を識別するために使用する。
"""
enum Crud {
  """
  データが作成されたときに指定する
  """
  CREATED

  """
  データが削除されたときに指定する
  """
  DELETED

  """
  データが更新されたときに指定する
  """
  UPDATED
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

"""
Autogenerated input type of Login
"""
input LoginInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  password: String!
}

"""
Autogenerated return type of Login
"""
type LoginPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String!
  user: User!
}

type Mutation {
  login(
    """
    Parameters for Login
    """
    input: LoginInput!
  ): LoginPayload

  """
  投稿を新規作成
  """
  postCreate(
    """
    Parameters for PostCreate
    """
    input: PostCreateInput!
  ): PostCreatePayload

  """
  渡されたidの投稿を削除する
  """
  postDelete(
    """
    Parameters for PostDelete
    """
    input: PostDeleteInput!
  ): PostDeletePayload

  """
  投稿を更新する
  """
  postUpdate(
    """
    Parameters for PostUpdate
    """
    input: PostUpdateInput!
  ): PostUpdatePayload

  """
  ユーザー新規作成
  """
  userCreate(
    """
    Parameters for UserCreate
    """
    input: UserCreateInput!
  ): UserCreatePayload
}

type Post {
  """
  著者
  """
  author: String!

  """
  作成日
  """
  createdAt: ISO8601DateTime!

  """
  ID
  """
  id: ID!

  """
  タイトル
  """
  title: String!

  """
  更新日
  """
  updatedAt: ISO8601DateTime!

  """
  Userの外部キー
  """
  userId: Int!
}

"""
Autogenerated input type of PostCreate
"""
input PostCreateInput {
  author: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  title: String!
}

"""
Autogenerated return type of PostCreate
"""
type PostCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  post: Post!
}

"""
Autogenerated input type of PostDelete
"""
input PostDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of PostDelete
"""
type PostDeletePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  post: Post!
}

"""
Autogenerated input type of PostUpdate
"""
input PostUpdateInput {
  author: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  title: String!
}

"""
Autogenerated return type of PostUpdate
"""
type PostUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  post: Post!
}

"""
Autogenerated return type of PostWasPublished
"""
type PostWasPublishedPayload {
  mutation: Crud!
  post: Post!
}

type Query {
  """
  投稿を全て取得する
  """
  posts: [Post!]

  """
  ユーザーを全て取得する
  """
  users: [User!]
}

type Subscription {
  postWasPublished: PostWasPublishedPayload!
}

type User {
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  name: String!
  password: String!
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of UserCreate
"""
input UserCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  email: String!
  name: String!
  password: String!
}

"""
Autogenerated return type of UserCreate
"""
type UserCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  token: String!
  user: User!
}
